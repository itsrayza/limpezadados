# -*- coding: utf-8 -*-
"""limpeza_dados

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZZjvNq5rNcSv-oFVEQ-p7GU7VFbWzaCe
"""

# Projeto: Limpeza e Organização de Dados de Vendas Online

import pandas as pd

# 1. Carregando os dados
df = pd.read_csv('vendas_sujas.csv')
print(' Visualização inicial:')
print(df.head())

# 2. Verificando o estado dos dados
print('\n Informações dos dados:')
df.info()

# 3. Tratamento de valores nulos
print('\n Valores nulos por coluna:')
print(df.isnull().sum())

# 4. Preenchendo valor_venda com 0
df['valor_venda'] = df['valor_venda'].fillna(0)

# 5. Corrigindo tipos de dados
df['data_venda'] = pd.to_datetime(df['data_venda'], errors='coerce')

# 6. Verificando datas inválidas após conversão
erros_data = df[df['data_venda'].isna()]
print('\n Linhas com data inválida:')
print(erros_data)

# 7. Garantindo que valor_venda e custo sejam float
df['valor_venda'] = pd.to_numeric(df['valor_venda'], errors='coerce')
df['custo'] = pd.to_numeric(df['custo'], errors='coerce')

# 8. Verificando possíveis erros após conversão numérica
print('\n Verificação de dados inválidos pós-conversão:')
print("→ valor_venda com NaN:", df['valor_venda'].isna().sum())
print("→ custo com NaN:", df['custo'].isna().sum())

# Se houver valores NaN após conversão, avaliar se deve preencher ou remover

# 9. Padronizando textos
df['produto'] = df['produto'].str.lower().str.strip()
df['cliente'] = df['cliente'].str.lower().str.strip()

# Correção de nomes de produtos
df['produto'] = df['produto'].replace({
    'celular-x': 'celular x',
    'celularx': 'celular x'
})

# 10. Removendo duplicatas
df = df.drop_duplicates()

# 11. Criando colunas úteis
df['lucro'] = df['valor_venda'] - df['custo']
df['ano_venda'] = df['data_venda'].dt.year

# 12. Visualização final
print('\n Dados finais após limpeza:')
print(df.head())

# 13. Salvando o dataset limpo
df.to_csv('vendas_limpos.csv', index=False)
print('\n Arquivo "vendas_limpos.csv" salvo com sucesso!')